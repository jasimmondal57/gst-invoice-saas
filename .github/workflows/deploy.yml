name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Run backend tests
        run: cd backend && npm test
        env:
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/test_db
          JWT_SECRET: test-secret

      - name: Run frontend tests
        run: cd frontend && npm test

      - name: Build backend
        run: cd backend && npm run build

      - name: Build frontend
        run: cd frontend && npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gst-invoice-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gst-invoice-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gst-invoice-api:buildcache,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gst-invoice-web:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gst-invoice-web:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gst-invoice-web:buildcache,mode=max

      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # Add your deployment script here
          # Example: ssh deploy@server 'cd /app && docker-compose pull && docker-compose up -d'

      - name: Notify deployment
        if: success()
        run: echo "✅ Deployment successful!"

      - name: Notify failure
        if: failure()
        run: echo "❌ Deployment failed!"

